apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "janusgraph.fullname" . }}
  labels:
    app: {{ template "janusgraph.name" . }}
    chart: {{ template "janusgraph.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "janusgraph.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "janusgraph.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: gremlinserver.graph
              value: /opt/janusgraph/conf/gremlin-server/janusgraph.properties
          {{- if .Values.extraEnvs }}
              {{- with .Values.extraEnvs }}
                {{- toYaml . | trim | nindent 12 -}}
              {{- end }}
          {{- end }}
          ports:
            - containerPort: 8182
              protocol: TCP
          volumeMounts:
            - name: {{ .Values.configMapOverrideName | default ( printf "%s-config" .Release.Name ) }}
              mountPath: /opt/janusgraph/conf/gremlin-server
            - name: local-db
              mountPath: {{ .Values.persistence.path }}
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - curl
                  --request GET
                  --silent
                  --output /dev/null
                  --fail
                  http://127.0.0.1:{{ .Values.service.port }}/?gremlin=100-1
            initialDelaySeconds: 90
            periodSeconds: 10
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
        - name: {{ .Values.configMapOverrideName | default ( printf "%s-config" .Release.Name ) }}
          configMap:
            name: {{ .Values.configMapOverrideName | default ( printf "%s-config" .Release.Name ) }}
        - name: local-db
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "janusgraph.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end -}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
